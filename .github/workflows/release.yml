name: Release

on:
  push:
    branches:
      - main
      - dev/*
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.11"

jobs:
  release:
    name: Semantic Release
    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      id-token: write
      contents: write
      issues: write
      pull-requests: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt

    - name: Configure Git
      run: |
        git config --global user.name "semantic-release"
        git config --global user.email "semantic-release@devpocket.com"

    - name: Run Semantic Release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        REPOSITORY_USERNAME: __token__
        REPOSITORY_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        # Check if release is needed using dry-run mode
        if semantic-release version --dry-run --print | grep -q "No release will be made"; then
          echo "No release needed"
          echo "RELEASE_MADE=false" >> $GITHUB_ENV
        else
          echo "Making release"
          semantic-release version
          echo "RELEASE_MADE=true" >> $GITHUB_ENV
        fi

    - name: Build Docker image if release was made
      if: env.RELEASE_MADE == 'true' && github.ref == 'refs/heads/main'
      run: |
        # Get the newly created version tag
        VERSION=$(git describe --tags --abbrev=0)
        echo "Building Docker image for version: $VERSION"

        # Build and tag the Docker image
        docker build --platform linux/amd64 -t digitop/devpocket-api:$VERSION .
        docker tag digitop/devpocket-api:$VERSION digitop/devpocket-api:latest

        # Optional: Add Docker Hub push here if needed
        # docker login -u ${{ secrets.DOCKER_USER }} -p ${{ secrets.DOCKER_PAT }}
        # docker push digitop/devpocket-api:$VERSION
        # docker push digitop/devpocket-api:latest

    - name: Deploy to production if release was made
      if: env.RELEASE_MADE == 'true' && github.ref == 'refs/heads/main'
      uses: "digitopvn/diginext-actions@v2"
      with:
        api_key: ${{ secrets.DX_API_KEY }}
        cluster: dxupprod
        registry: digitopdockerhub
        deploy_env: prod
        tail: false
        port: 8000

    - name: Create release summary
      if: env.RELEASE_MADE == 'true'
      run: |
        VERSION=$(git describe --tags --abbrev=0)
        echo "## 🚀 Release Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: $VERSION" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          echo "- **Deployed**: ✅ Production" >> $GITHUB_STEP_SUMMARY
        else
          echo "- **Deployed**: ⏭️ Development only" >> $GITHUB_STEP_SUMMARY
        fi

  notify-failure:
    name: Notify Release Failure
    runs-on: ubuntu-latest
    needs: [release]
    if: failure()

    steps:
    - name: Notify failure
      run: |
        echo "Release failed! Check the logs above for details."
        echo "Failed commit: ${{ github.sha }}"
        echo "Failed branch: ${{ github.ref }}"
